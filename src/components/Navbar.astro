---

---

<header class="sticky top-0 z-10 border-b bg-white">
    <div
        class="relative flex max-w-screen-xl flex-col overflow-hidden px-2 py-2 md:px-0 md:py-0 md:mx-auto md:flex-row md:items-center"
    >
        <input type="checkbox" class="peer hidden" id="navbar-open" />
        <label class="top-5 cursor-pointer md:hidden" for="navbar-open">
            <span class="sr-only">Toggle Navigation</span>
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                stroke-width="2"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
        </label>
        <nav
            aria-label="Header Navigation"
            class="peer-checked:mt-1 peer-checked:max-h-80 flex max-h-0 w-full flex-col items-center overflow-hidden transition-all justify-center md:max-h-full md:flex-row"
        >
            <ul
                class="flex flex-col items-center space-y-1 md:flex-row md:space-y-0"
            >
                <li class="md:mr-3">
                    <button
                        class="navBtn inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-blue-500 hover:border-blue-500 transition duration-300 ease-in-out"
                        data-target="section1"
                    >
                        <a href="#section1"> Home </a>
                    </button>
                </li>
                <li class="mr-3">
                    <button
                        class="navBtn inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-blue-500 hover:border-blue-500 transition duration-300 ease-in-out"
                        data-target="section2"
                    >
                        <a href="#section2"> Sobre mí </a>
                    </button>
                </li>
                <li class="mr-4">
                    <button
                        class="navBtn inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-blue-500 hover:border-blue-500 transition duration-300 ease-in-out"
                        data-target="section3"
                    >
                        <a href="#section3"> Tecnologías </a>
                    </button>
                </li>
                <li class="mr-3">
                    <button
                        class="navBtn inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-blue-500 hover:border-blue-500 transition duration-300 ease-in-out"
                        data-target="section4"
                    >
                        <a href="#section4"> Proyectos </a>
                    </button>
                </li>
                <li class="mr-3">
                    <button
                        class="navBtn inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-blue-500 hover:border-blue-500 transition duration-300 ease-in-out"
                        data-target="section5"
                    >
                        <a href="#section5"> Contacto </a>
                    </button>
                </li>
            </ul>
        </nav>
    </div>
</header>

<script>
    const buttons = document.querySelectorAll(
        ".navBtn",
    ) as NodeListOf<HTMLElement>;
    const sections = document.querySelectorAll('div[id^="section"]');

    const options = {
        root: null,
        rootMargin: "0px",
        threshold: 0.8,
    };

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                const activeButton = document.querySelector(
                    `.navBtn[data-target="${entry.target.id}"]`,
                );
                buttons.forEach((btn) => {
                    btn.classList.remove("border-blue-400", "text-blue-400");
                    btn.classList.add("border-transparent");
                });
                activeButton.classList.remove("border-transparent");
                activeButton.classList.add("border-blue-400", "text-blue-400");
            }
        });
    }, options);

    sections.forEach((section) => {
        observer.observe(section);
    });

    buttons.forEach((button) => {
        button.addEventListener("click", () => {
            const targetSection = document.getElementById(
                button.dataset.target,
            );
            window.scrollTo({
                top: targetSection.offsetTop,
                behavior: "smooth",
            });
        });
    });
</script>
